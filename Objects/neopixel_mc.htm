<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\neopixel_mc.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\neopixel_mc.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Dec 09 13:57:43 2019
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; particles_animation &rArr; spawn_particle &rArr; randrange
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[31]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[2b]">ACC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">ACC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2b]">ACC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[27]">ADC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[2a]">CRCCU_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[28]">DACC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[13]">EEFC0_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[14]">EEFC1_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[1c]">HSMCI_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[17]">PIOA_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[18]">PIOB_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[19]">PIOC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[12]">PMC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[29]">PWM_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[e]">RSTC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[f]">RTC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[10]">RTT_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[2f]">Reset_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[1f]">SPI_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[20]">SSC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[d]">SUPC_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[2d]">SystemInit</a> from system_sam4s.o(i.SystemInit) referenced from startup_sam4s.o(.text)
 <LI><a href="#[21]">TC0_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[22]">TC1_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[23]">TC2_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[24]">TC3_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[25]">TC4_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[26]">TC5_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[1d]">TWI0_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[1e]">TWI1_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[15]">UART0_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[16]">UART1_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[2c]">UDP_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[1a]">USART0_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[1b]">USART1_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[11]">WDT_IRQHandler</a> from startup_sam4s.o(.text) referenced from startup_sam4s.o(RESET)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from startup_sam4s.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[30]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[32]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[34]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[5f]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[60]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[61]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[3a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[62]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[63]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[64]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[35]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[65]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[66]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[67]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[68]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[69]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[70]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[71]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[72]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[73]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[74]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[75]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[76]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[3f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[77]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[78]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[79]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[7a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[7b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[7c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[33]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[37]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[39]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[7f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; particles_animation &rArr; spawn_particle &rArr; randrange
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[80]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[44]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[81]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[40]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5a]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spawn_particle
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randrange
</UL>

<P><STRONG><a name="[2f]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_sam4s.o(.text))

<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>CRCCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EEFC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EEFC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>HSMCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PIOA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>PIOB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PIOC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RSTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SUPC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TC5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UDP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sam4s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_sam4s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[42]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[36]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spawn_particle
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;particles_animation
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_closest_particle
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[89]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3d]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[8a]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[2d]"></a>SystemInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, system_sam4s.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_sam4s.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>flush</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, main.o(i.flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flush &rArr; spi_send_byte &rArr; pioDigitalRead &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_byte
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cs_low
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_frame
</UL>

<P><STRONG><a name="[49]"></a>get_closest_particle</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, main.o(i.get_closest_particle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_closest_particle &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;particles_animation
</UL>

<P><STRONG><a name="[3c]"></a>main</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; particles_animation &rArr; spawn_particle &rArr; randrange
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiInit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;samInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinMode
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioInit
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;particles_animation
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4f]"></a>particles_animation</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, main.o(i.particles_animation))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = particles_animation &rArr; spawn_particle &rArr; randrange
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spawn_particle
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_screen_color
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_frame
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_closest_particle
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>pioDigitalRead</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main.o(i.pioDigitalRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pioDigitalRead &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinToBase
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_byte
</UL>

<P><STRONG><a name="[55]"></a>pioDigitalWrite</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, main.o(i.pioDigitalWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pioDigitalWrite &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinToBase
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cs_low
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cs_high
</UL>

<P><STRONG><a name="[4c]"></a>pioInit</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, main.o(i.pioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = pioInit
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmcEnablePeriph
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>pioPinMode</STRONG> (Thumb, 218 bytes, Stack size 20 bytes, main.o(i.pioPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pioPinMode &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinToBase
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>pioPinToBase</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, main.o(i.pioPinToBase))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPortToBase
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinToPort
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinMode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioDigitalWrite
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioDigitalRead
</UL>

<P><STRONG><a name="[57]"></a>pioPinToPort</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.pioPinToPort))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinToBase
</UL>

<P><STRONG><a name="[58]"></a>pioPortToBase</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.pioPortToBase))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinToBase
</UL>

<P><STRONG><a name="[5c]"></a>pmcDisableWriteProtection</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.pmcDisableWriteProtection))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;samInit
</UL>

<P><STRONG><a name="[56]"></a>pmcEnablePeriph</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.pmcEnablePeriph))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioInit
</UL>

<P><STRONG><a name="[5d]"></a>pmcMainClkBypass</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main.o(i.pmcMainClkBypass))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;samInit
</UL>

<P><STRONG><a name="[59]"></a>randrange</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, main.o(i.randrange))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = randrange
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spawn_particle
</UL>

<P><STRONG><a name="[4b]"></a>samInit</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, main.o(i.samInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = samInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtDisable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmcMainClkBypass
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmcDisableWriteProtection
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>send_frame</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, main.o(i.send_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = send_frame &rArr; flush &rArr; spi_send_byte &rArr; pioDigitalRead &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_byte
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cs_low
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cs_high
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;particles_animation
</UL>

<P><STRONG><a name="[46]"></a>set_cs_high</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, main.o(i.set_cs_high))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = set_cs_high &rArr; pioDigitalWrite &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioDigitalWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_frame
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush
</UL>

<P><STRONG><a name="[48]"></a>set_cs_low</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, main.o(i.set_cs_low))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = set_cs_low &rArr; pioDigitalWrite &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioDigitalWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_frame
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush
</UL>

<P><STRONG><a name="[51]"></a>set_screen_color</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, main.o(i.set_screen_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_screen_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;particles_animation
</UL>

<P><STRONG><a name="[50]"></a>spawn_particle</STRONG> (Thumb, 174 bytes, Stack size 72 bytes, main.o(i.spawn_particle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = spawn_particle &rArr; randrange
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randrange
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;particles_animation
</UL>

<P><STRONG><a name="[4d]"></a>spiInit</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, main.o(i.spiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spiInit &rArr; pioPinMode &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmcEnablePeriph
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioPinMode
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>spiSendReceive</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(i.spiSendReceive))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_byte
</UL>

<P><STRONG><a name="[47]"></a>spi_send_byte</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.spi_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_send_byte &rArr; pioDigitalRead &rArr; pioPinToBase
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiSendReceive
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pioDigitalRead
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_frame
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush
</UL>

<P><STRONG><a name="[5b]"></a>wdtDisable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.wdtDisable))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;samInit
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
